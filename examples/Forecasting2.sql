create database MD_G4_FLUJO_VEHICULAR
GO

USE MD_G4_FLUJO_VEHICULAR
GO

--CREACION DE TABLA_BASE
CREATE TABLE Tabla_origen (

PERIODO INT,
FECHA NVARCHAR (20),
HORA_INICIO INT,
ESTACION NVARCHAR (20),
SENTIDO NVARCHAR(20),
TIPO_VEHICULO NVARCHAR (50),
FORMA_PAGO NVARCHAR (50),
CANTIDAD_PASOS INT
);
GO

SELECT * FROM Tabla_origen

---

--CARGA DE CSV
BULK INSERT Tabla_origen
FROM 'C:\Users\ale_p\Desktop\UNMSM\Ciclo9_20251\Mineria\flujo-vehicular-2017_2021_illia.csv'
WITH
(
    FIELDTERMINATOR = ',',  -- Si usas coma como delimitador de campos
    ROWTERMINATOR = '\n',    -- Si cada línea termina con un salto de línea
    FIRSTROW = 2            -- Si no hay cabecera
);
GO
select * from Tabla_origen

ALTER TABLE Tabla_origen
ADD DATE_TIME DATETIME;
GO

UPDATE Tabla_origen
SET DATE_TIME = TRY_CONVERT(DATETIME, fecha, 103);
GO

SELECT fecha, DATE_TIME
FROM Tabla_origen
WHERE DATE_TIME IS NULL;
GO

select * from Tabla_origen
GO
----------------------------------------

-- Eliminación de tablas previas
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[FACT_STEP]') AND type in (N'U')) DROP TABLE [dbo].[FACT_STEP]
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DIM_HORA]') AND type in (N'U')) DROP TABLE [dbo].[DIM_HORA]
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DIM_ESTACION]') AND type in (N'U')) DROP TABLE [dbo].[DIM_ESTACION]
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DIM_SENTIDO]') AND type in (N'U')) DROP TABLE [dbo].[DIM_SENTIDO]
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DIM_FORMA_PAGO]') AND type in (N'U')) DROP TABLE [dbo].[DIM_FORMA_PAGO]
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DIM_TIPO_VEHICULO]') AND type in (N'U')) DROP TABLE [dbo].[DIM_TIPO_VEHICULO]
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[FORECASTING_STEP]') AND type in (N'U')) DROP TABLE [dbo].[FORECASTING_STEP]
IF EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[PREDICCION_STEP]') AND type in (N'U')) DROP TABLE [dbo].[PREDICCION_STEP]
GO


-- Dimensión Hora
CREATE TABLE [dbo].[DIM_HORA](
	[HORA_ID] INT NOT NULL PRIMARY KEY,
	[HORA] TIME(0) NULL
)
GO
INSERT INTO DIM_HORA (HORA_ID, HORA)
SELECT DISTINCT 
    TRY_CAST(HORA_INICIO AS INT) AS HORA_ID,
    CAST(TRY_CAST(HORA_INICIO AS INT) AS VARCHAR) + ':00' AS HORA
FROM Tabla_origen
WHERE TRY_CAST(HORA_INICIO AS INT) IS NOT NULL;

SELECT * FROM DIM_HORA
GO


-- Dimensión Estación
CREATE TABLE [dbo].[DIM_ESTACION](
	[ESTACION_ID] INT NOT NULL PRIMARY KEY,
	[ESTACION] NVARCHAR(100) NULL
)
GO
INSERT INTO DIM_ESTACION (ESTACION_ID, ESTACION)
SELECT ROW_NUMBER() OVER (ORDER BY ESTACION) AS ESTACION_ID,
       ESTACION
FROM (SELECT DISTINCT ESTACION FROM Tabla_origen) AS T;

SELECT * FROM DIM_ESTACION
GO

-- Dimensión Sentido
CREATE TABLE [dbo].[DIM_SENTIDO](
	[SENTIDO_ID] INT NOT NULL PRIMARY KEY,
	[SENTIDO] NVARCHAR(50) NULL
)
GO
INSERT INTO DIM_SENTIDO (SENTIDO_ID, SENTIDO)
SELECT ROW_NUMBER() OVER (ORDER BY SENTIDO) AS SENTIDO_ID,
       SENTIDO
FROM (SELECT DISTINCT SENTIDO FROM Tabla_origen) AS T;

SELECT * FROM DIM_SENTIDO
GO

-- Dimensión Forma de Pago
CREATE TABLE [dbo].[DIM_FORMA_PAGO](
	[FORMA_PAGO_ID] INT NOT NULL PRIMARY KEY,
	[FORMA_PAGO] NVARCHAR(50) NULL
)
GO
INSERT INTO DIM_FORMA_PAGO (FORMA_PAGO_ID, FORMA_PAGO)
SELECT ROW_NUMBER() OVER (ORDER BY FORMA_PAGO) AS FORMA_PAGO_ID,
       FORMA_PAGO
FROM (SELECT DISTINCT FORMA_PAGO FROM Tabla_origen) AS T;
GO
SELECT * FROM DIM_FORMA_PAGO
GO

-- Dimensión Tipo de Vehículo
CREATE TABLE [dbo].[DIM_TIPO_VEHICULO](
	[TIPO_VEHICULO_ID] INT NOT NULL PRIMARY KEY,
	[TIPO_VEHICULO] NVARCHAR(50) NULL
)
GO
INSERT INTO DIM_TIPO_VEHICULO (TIPO_VEHICULO_ID, TIPO_VEHICULO)
SELECT ROW_NUMBER() OVER (ORDER BY TIPO_VEHICULO) AS TIPO_VEHICULO_ID,
       TIPO_VEHICULO
FROM (SELECT DISTINCT TIPO_VEHICULO FROM Tabla_origen) AS T;
GO
SELECT * FROM DIM_TIPO_VEHICULO
GO

CREATE TABLE FACT_STEP (
	PERIODO INT NOT NULL,
	FECHA DATE NOT NULL,
	HORA_ID INT NOT NULL,
	ESTACION_ID INT NOT NULL,
	SENTIDO_ID INT NOT NULL,
	TIPO_VEHICULO_ID INT NOT NULL,
	FORMA_PAGO_ID INT NOT NULL,
	CANTIDAD_PASOS INT NULL,
	CONSTRAINT FK_FACT_HORA FOREIGN KEY (HORA_ID) REFERENCES DIM_HORA(HORA_ID),
	CONSTRAINT FK_FACT_ESTACION FOREIGN KEY (ESTACION_ID) REFERENCES DIM_ESTACION(ESTACION_ID),
	CONSTRAINT FK_FACT_SENTIDO FOREIGN KEY (SENTIDO_ID) REFERENCES DIM_SENTIDO(SENTIDO_ID),
	CONSTRAINT FK_FACT_TIPO_VEHICULO FOREIGN KEY (TIPO_VEHICULO_ID) REFERENCES DIM_TIPO_VEHICULO(TIPO_VEHICULO_ID),
	CONSTRAINT FK_FACT_FORMA_PAGO FOREIGN KEY (FORMA_PAGO_ID) REFERENCES DIM_FORMA_PAGO(FORMA_PAGO_ID)
);
GO

INSERT INTO FACT_STEP (PERIODO, FECHA, HORA_ID, ESTACION_ID, SENTIDO_ID, TIPO_VEHICULO_ID, FORMA_PAGO_ID, CANTIDAD_PASOS)
SELECT 
    CAST(PERIODO AS INT),
    CAST(DATE_TIME AS DATE),
    H.HORA_ID,
    E.ESTACION_ID,
    S.SENTIDO_ID,
    V.TIPO_VEHICULO_ID,
    F.FORMA_PAGO_ID,
    CAST(CANTIDAD_PASOS AS INT)
FROM Tabla_origen T
INNER JOIN DIM_HORA H ON CAST(T.HORA_INICIO AS INT) = H.HORA_ID
INNER JOIN DIM_ESTACION E ON T.ESTACION = E.ESTACION
INNER JOIN DIM_SENTIDO S ON T.SENTIDO = S.SENTIDO
INNER JOIN DIM_TIPO_VEHICULO V ON T.TIPO_VEHICULO = V.TIPO_VEHICULO
INNER JOIN DIM_FORMA_PAGO F ON T.FORMA_PAGO = F.FORMA_PAGO
WHERE ISNUMERIC(T.HORA_INICIO) = 1;
GO
select * from FACT_STEP
go

-- Tabla Forecasting (Predicciones)
CREATE TABLE [dbo].[FORECASTING_STEP](
	[DATE_TIME] DATETIME2(0) NOT NULL,
	[PREDICCION] FLOAT NULL,
	[MODELO] NVARCHAR(50) NULL
)
GO

-- Tabla Predicciones Ejecutadas
CREATE TABLE [dbo].[PREDICCION_STEP](
	[DATE_TIME] DATETIME2(0) NOT NULL,
	[PREDICCION] FLOAT NULL,
	[MODELO] NVARCHAR(50) NULL,
	[EXECUTION_DATE] DATETIME2(0) NULL
)
GO

--------------------------------------------------- fin1
IF NOT EXISTS (SELECT * FROM sysobjects WHERE name='DIM_FECHA' AND xtype='U')
BEGIN
    CREATE TABLE dbo.DIM_FECHA (
        FECHA DATE PRIMARY KEY,                -- Fecha base (clave primaria)
        id_fecha VARCHAR(8),                   -- Fecha en formato YYYYMMDD
        DIA_SEMANA INT,                        -- 1=Lunes ... 7=Domingo (DATEPART)
        NOMBRE_DIA_SEMANA VARCHAR(20),         -- DATENAME
        DIA_MES INT,                           -- Día del mes
        DIA_ANIO INT,                          -- Día del año
        NOMBRE_MES VARCHAR(20),                -- Nombre del mes
        MES_ANIO INT,                          -- Número del mes
        SEMANA_ANIO INT,                       -- Semana ISO
        ANIO INT,                              -- Año
        BIMESTRE INT,                          -- Bimestre
        TRIMESTRE INT,                         -- Trimestre
        SEMESTRE INT,                          -- Semestre
        FERIADO BIT                            -- Manual por ahora (0)
    )
END
go

-- Paso 1: Insertar fechas únicas
INSERT INTO dbo.DIM_FECHA (FECHA)
SELECT DISTINCT FECHA
FROM dbo.FACT_STEP
WHERE FECHA IS NOT NULL
  AND FECHA NOT IN (SELECT FECHA FROM dbo.DIM_FECHA);

-- Paso 2: Actualizar los demás campos calculados
UPDATE dbo.DIM_FECHA
SET 
    id_fecha = CONVERT(VARCHAR(8), FECHA, 112),  -- YYYYMMDD
    DIA_SEMANA = DATEPART(WEEKDAY, FECHA),       -- 1=Domingo, 2=Lunes... (depende de idioma)
    NOMBRE_DIA_SEMANA = DATENAME(WEEKDAY, FECHA),
    DIA_MES = DAY(FECHA),
    DIA_ANIO = DATEPART(DAYOFYEAR, FECHA),
    NOMBRE_MES = DATENAME(MONTH, FECHA),
    MES_ANIO = MONTH(FECHA),
    SEMANA_ANIO = DATEPART(ISO_WEEK, FECHA),
    ANIO = YEAR(FECHA),
    BIMESTRE = ((MONTH(FECHA) - 1) / 2) + 1,
    TRIMESTRE = ((MONTH(FECHA) - 1) / 3) + 1,
    SEMESTRE = ((MONTH(FECHA) - 1) / 6) + 1,
    FERIADO = 0;  -- Dejar en 0 o actualizar manualmente

go

select  * from DIM_FECHA where ANIO = 2020
------------------------------------------------------- fin2

ALTER TABLE dbo.FACT_STEP
WITH CHECK ADD CONSTRAINT FK_FACTSTEP_DIMFECHA
FOREIGN KEY (FECHA)
REFERENCES dbo.DIM_FECHA (FECHA);
go

TRUNCATE TABLE dbo.FORECASTING_STEP;
TRUNCATE TABLE dbo.PREDICCION_STEP;
go

------------------------------------------------------------ fin3
CREATE VIEW dbo.vw_FACT_STEP
AS
SELECT 
    FECHA,
    HORA_ID,
    ESTACION_ID,
    SENTIDO_ID,
    TIPO_VEHICULO_ID,
    FORMA_PAGO_ID,
    CANTIDAD_PASOS,
    'TRAIN' AS TIPO_CONJUNTO,
    NULL AS ID_PREDICCION
FROM dbo.FACT_STEP
WHERE FECHA <= '2017-08-31'  -- Ajusta esta fecha según tus datos

UNION ALL

SELECT 
    FECHA,
    HORA_ID,
    ESTACION_ID,
    SENTIDO_ID,
    TIPO_VEHICULO_ID,
    FORMA_PAGO_ID,
    CANTIDAD_PASOS,
    'TEST' AS TIPO_CONJUNTO,
    CONCAT(FORMAT(FECHA, 'yyyyMMdd'), HORA_ID) AS ID_PREDICCION
FROM dbo.FACT_STEP
WHERE FECHA > '2017-08-31';
----------------------------------------------
CREATE VIEW dbo.vw_FACT_STEP_FORECASTING
AS
SELECT  
    CONVERT(DATETIME, CONVERT(VARCHAR, F.FECHA, 23) + ' ' + CONVERT(VARCHAR, H.HORA, 8)) AS date_time,
    H.HORA_ID AS [hour],
    F.MES_ANIO AS [month],
    F.DIA_SEMANA AS [weekday],
    B.ESTACION_ID,
    B.SENTIDO_ID,
    B.TIPO_VEHICULO_ID,
    B.FORMA_PAGO_ID,
    B.CANTIDAD_PASOS,
    CAST(IIF(B.TIPO_CONJUNTO = 'TRAIN', 0, 1) AS INT) AS TIPO_CONJUNTO
FROM dbo.vw_FACT_STEP B
INNER JOIN dbo.DIM_FECHA F ON FORMAT(B.FECHA, 'yyyyMMdd') = F.id_fecha
INNER JOIN dbo.DIM_HORA H ON B.HORA_ID = H.HORA_ID;

-----------
CREATE VIEW dbo.vw_FORECASTING_STEP
AS
SELECT 
    FORMAT(DATE_TIME, 'yyyyMMdd') AS FECHA_ID,
    DATEPART(HOUR, DATE_TIME) AS HORA_ID,
    P.[MODEL_FORECASTER],
    P.[MODEL_EXOGENEAS],
    P.[MODEL_EXOGENEAS_LGBM],
    P.[MODEL_EXOGENEAS_CatBoost],
    P.[MODEL_EXOGENEAS_LSTM]
FROM (
    SELECT 
        DATE_TIME,
        PREDICCION,
        MODELO
    FROM dbo.FORECASTING_STEP
) AS Source
PIVOT (
    MAX(PREDICCION) FOR MODELO IN (
        [MODEL_FORECASTER],
        [MODEL_EXOGENEAS],
        [MODEL_EXOGENEAS_LGBM],
        [MODEL_EXOGENEAS_CatBoost],
        [MODEL_EXOGENEAS_LSTM]
    )
) AS P;
-------------------------------------
CREATE VIEW dbo.vw_PREDICCION_STEP
AS
WITH CTE_Prediccion AS (
    SELECT 
        DATE_TIME,
        PREDICCION,
        MODELO
    FROM dbo.PREDICCION_STEP
)
SELECT 
    CONCAT(FORMAT(DATE_TIME, 'yyyyMMdd'), DATEPART(HOUR, DATE_TIME)) AS ID_PREDICCION,
    [MODEL_FORECASTER],
    [MODEL_EXOGENEAS],
    [MODEL_EXOGENEAS_CatBoost],
    [MODEL_EXOGENEAS_LGBM],
    [MODEL_EXOGENEAS_LSTM]
FROM (
    SELECT 
        DATE_TIME,
        PREDICCION,
        MODELO
    FROM CTE_Prediccion
) AS Source
PIVOT (
    MAX(PREDICCION) FOR MODELO IN (
        [MODEL_FORECASTER],
        [MODEL_EXOGENEAS],
        [MODEL_EXOGENEAS_CatBoost],
        [MODEL_EXOGENEAS_LGBM],
        [MODEL_EXOGENEAS_LSTM]
    )
) AS PivotTable;
------------------------------------------------ fin parte 4
TRUNCATE TABLE dbo.FORECASTING_STEP;
TRUNCATE TABLE dbo.PREDICCION_STEP;
go

select * from vw_FACT_STEP_FORECASTING
-------------------------------------------------fin parte 5